version: '3.8'
services:
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: unless-stopped
    ports:
      - ${APP_PORT}:8432
    networks:
      - tipi_main_network
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=$$POSTGRES_PASSWORD psql -U $$POSTGRES_USER -d $$POSTGRES_DB -c 'SELECT 1' -tA"]
      interval: 30s
      timeout: 30s
      retries: 3
    labels:
      traefik.enable: true
      traefik.http.middlewares.postgres-web-redirect.redirectscheme.scheme: https
      traefik.http.services.postgres.loadbalancer.server.port: 8432
      traefik.http.routers.postgres-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.postgres-insecure.entrypoints: web
      traefik.http.routers.postgres-insecure.service: postgres
      traefik.http.routers.postgres-insecure.middlewares: postgres-web-redirect
      traefik.http.routers.postgres.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.postgres.entrypoints: websecure
      traefik.http.routers.postgres.service: postgres
      traefik.http.routers.postgres.tls.certresolver: myresolver
      traefik.http.routers.postgres-local-insecure.rule: Host(`postgres.${LOCAL_DOMAIN}`)
      traefik.http.routers.postgres-local-insecure.entrypoints: web
      traefik.http.routers.postgres-local-insecure.service: postgres
      traefik.http.routers.postgres-local-insecure.middlewares: postgres-web-redirect
      traefik.http.routers.postgres-local.rule: Host(`postgres.${LOCAL_DOMAIN}`)
      traefik.http.routers.postgres-local.entrypoints: websecure
      traefik.http.routers.postgres-local.service: postgres
      traefik.http.routers.postgres-local.tls: true
      runtipi.managed: true
